{
    "HumanEval/38": "\n\ndef encode_cyclic(s: str):\n    \"\"\"\n    returns encoded string by cycling groups of three characters.\n    \"\"\"\n    # split string to groups. Each of length 3.\n    groups = [s[(3 * i):min((3 * i + 3), len(s))] for i in range((len(s) + 2) // 3)]\n    # cycle elements in each group. Unless group has fewer elements than 3.\n    groups = [(group[1:] + group[0]) if len(group) == 3 else group for group in groups]\n    return \"\".join(groups)\n\n\ndef decode_cyclic(s: str):\n    \"\"\"Reverses the encoding applied by the encode_cyclic function to restore and return the original string.\"\"\"",
    "HumanEval/50": "\n\ndef encode_shift(s: str):\n    \"\"\"\n    returns encoded string by shifting every character by 5 in the alphabet.\n    \"\"\"\n    return \"\".join([chr(((ord(ch) + 5 - ord(\"a\")) % 26) + ord(\"a\")) for ch in s])\n\n\ndef decode_shift(s: str):\n    \"\"\"Accepts a string that was encoded using the encode_shift function and returns the original, decoded string.\"\"\"",
    "HumanEval/126": "def is_sorted(lst):\n    '''Check if a list of integers is in non-decreasing order. Return False if there are more than two occurrence of any number in the list. The list is assumed to contain only non-negative integers.'''",
    "HumanEval/138": "def is_equal_to_sum_even(n):\n    \"\"\"Determine if the specified number n can be expressed as the sum of four positive even integers.\"\"\""
}