{
    "HumanEval/0": "bool: Returns True if there are at least two elements in the list that are within the specified threshold of each other, otherwise returns False.",
    "HumanEval/1": "List[str]: A list of strings, where each string represents a group of parentheses from the input string, separated based on their nesting levels.",
    "HumanEval/2": "float: The function returns a floating-point number that is the truncated version of the input number. The truncation removes any decimal places beyond the specified precision, effectively shortening the number without rounding.",
    "HumanEval/3": "bool: Returns True if the cumulative sum of the operations at any point goes below the threshold, otherwise returns False.",
    "HumanEval/4": "float: The mean absolute deviation of the provided data set, representing the average of the absolute differences between each data point and the mean of the data set.",
    "HumanEval/5": "List[Any]: A new list with the separator interspersed between each element of the original list.",
    "HumanEval/6": "List[str]: A list of strings, where each string represents a group of characters found within the outermost level of nested parentheses in the input expression. The list includes all such groups found in the order they appear.",
    "HumanEval/7": "List[str]: A list of strings from the input list that contain the specified substring.",
    "HumanEval/8": "Tuple[int, int]: A tuple containing two integers. The first integer is the sum of all elements from both lists, and the second integer is the product of all elements from both lists.",
    "HumanEval/9": "List[int]: A list of integers where each element is the maximum value within the current window of the specified size as it slides over the input data list.",
    "HumanEval/10": "str: The function returns a palindrome string that is derived from the input string 's'. If it is not possible to form a palindrome, the function may return an empty string or a specific error message.",
    "HumanEval/11": "str: A new string resulting from the XOR operation applied to each character of the input strings. Each character in the resulting string is derived by performing a bitwise XOR operation on the corresponding characters of the input strings.",
    "HumanEval/12": "str: The longest string from the input list. If there are multiple strings of the same maximum length, the first one encountered in the list is returned.",
    "HumanEval/13": "int: The greatest common divisor of the two input integers.",
    "HumanEval/14": "List[str]: A list containing all possible prefixes of the input string, starting from the shortest to the longest.",
    "HumanEval/15": "List[str]: A list of strings, each representing a segment of the input string split by the separator and truncated to the specified maximum length.",
    "HumanEval/16": "int: The function returns an integer representing the number of distinct characters in the input string.",
    "HumanEval/17": "dict: A dictionary containing the parsed music information. The keys in the dictionary represent different attributes of the music data, such as 'title', 'artist', 'album', etc., and the values are the corresponding parsed data extracted from the input.",
    "HumanEval/18": "int: The function returns an integer representing the number of times the specified value appears in the input_list.",
    "HumanEval/19": "List[int]: A new list of integers sorted in the specified order (ascending by default, or descending if reverse is True).",
    "HumanEval/20": "List[int]: A list of integers representing the k closest elements to the target integer x, sorted in ascending order.",
    "HumanEval/21": "List[float]: A list of floating-point numbers that have been rescaled to the specified range [min_value, max_value].",
    "HumanEval/22": "List[int]: A list of integers that satisfy the given condition.",
    "HumanEval/23": "size_t: The function returns the number of characters in the string pointed to by 's', excluding the null-terminating character. The return type 'size_t' is an unsigned integer type that is capable of representing the size of any object in bytes.",
    "HumanEval/24": "int: The largest divisor of the given number, which is less than the number itself.",
    "HumanEval/25": "List[int]: A list of integers representing the prime factors of the input number.",
    "HumanEval/26": "List[Any]: A new list containing the unique elements from the input list, preserving the original order of their first occurrence.",
    "HumanEval/27": "str: A new string with the case of each letter in the input string flipped.",
    "HumanEval/28": "str: A new string that is the result of concatenating str1 and str2, with the separator in between if provided.",
    "HumanEval/29": "List[str]: A list of strings that start with the specified prefix. If no strings match the prefix, an empty list is returned.",
    "HumanEval/30": "List[float]: A list containing only the positive numbers from the input list.",
    "HumanEval/31": "bool: Returns True if the input number is a prime number, otherwise returns False.",
    "HumanEval/32": "float: The function returns a float representing the point within the interval [start, end] where the input function is approximately zero, within the specified tolerance. If the zero is not found within the maximum number of iterations, the function may return None or raise an exception.",
    "HumanEval/33": "List[Tuple]: A new list of tuples sorted based on the element at the specified index in each tuple. The sorting is done in ascending order.",
    "HumanEval/34": "List[Any]: A list containing only the unique elements from the input list, preserving their original order.",
    "HumanEval/35": "int: The maximum integer value found in the list of elements.",
    "HumanEval/36": "List[str]: A list of strings where each element corresponds to a number from 1 to n. For multiples of three, the string 'Fizz' is returned, for multiples of five, 'Buzz', and for multiples of both three and five, 'FizzBuzz'. For all other numbers, the string representation of the number is returned.",
    "HumanEval/37": "List[int]: A list of integers where all even numbers are sorted in ascending order, but odd numbers remain in their original positions.",
    "HumanEval/38": "List[int]: A list of integers representing the decoded message from the cyclic code.",
    "HumanEval/39": "List[int]: A list of prime numbers found in the Fibonacci sequence starting from the specified point.",
    "HumanEval/40": "List[List[int]]: A list of lists, where each inner list contains three integers that sum to zero. Each triplet is unique, and the order of the triplets does not matter.",
    "HumanEval/41": "List[Tuple[int, int]]: A list of tuples, where each tuple contains two integers representing the indices of cars that collide during the given time interval.",
    "HumanEval/42": "List[int]: A new list of integers where each element is the result of adding the increment value to the corresponding element in the input list.",
    "HumanEval/43": "List[Tuple[int, int]]: A list of tuples, where each tuple contains a pair of integers from the input list that sum to zero. If no such pairs exist, the function returns an empty list.",
    "HumanEval/44": "str: The string representation of the number in the new base.",
    "HumanEval/45": "float: The area of the triangle, calculated using the formula (base * height) / 2.",
    "HumanEval/46": "int: The Fibonacci number at the specified position 'n' in the sequence. If 'n' is 0, the function returns 0; if 'n' is 1, it returns 1; for any other positive integer 'n', it returns the sum of the two preceding numbers in the sequence.",
    "HumanEval/47": "float: The median value of the list of numbers. If the list has an odd number of elements, the median is the middle element after sorting. If the list has an even number of elements, the median is the average of the two middle elements after sorting.",
    "HumanEval/48": "bool: Returns True if the input string is a palindrome, meaning it reads the same forwards and backwards, ignoring case and non-alphanumeric characters. Returns False otherwise.",
    "HumanEval/49": "float: The result of the number after applying the modulus operation.",
    "HumanEval/50": "str: The decoded string after applying the reverse shift to each character in the encoded string.",
    "HumanEval/51": "str: A new string that is identical to the input string but with all vowel characters ('a', 'e', 'i', 'o', 'u', both uppercase and lowercase) removed.",
    "HumanEval/52": "List[float]: A list of numbers from the input list that are below the specified threshold.",
    "HumanEval/53": "int or float: The sum of the two input numbers, a and b.",
    "HumanEval/54": "bool: Returns True if both strings contain the same characters, regardless of order and frequency, otherwise returns False.",
    "HumanEval/55": "int: The Fibonacci number at the nth position in the sequence. The function returns an integer value representing the Fibonacci number.",
    "HumanEval/56": "bool: Returns True if the brackets in the input string are correctly matched and nested, otherwise returns False.",
    "HumanEval/57": "bool: Returns True if the sequence is monotonic (either entirely non-increasing or non-decreasing), otherwise returns False.",
    "HumanEval/58": "List[int]: A list containing the common elements found in both list1 and list2.",
    "HumanEval/59": "int: The largest prime factor of the given number. If the number itself is prime, it returns the number.",
    "HumanEval/60": "int: The sum of all integers from 1 to n, inclusive. This is the total of the arithmetic series starting at 1 and ending at n.",
    "HumanEval/61": "bool: Returns True if the brackets in the expression are correctly matched and nested, otherwise returns False.",
    "HumanEval/62": "float: The derivative of the function at the specified point, calculated using the finite difference method.",
    "HumanEval/63": "int: The Fibonacci number at the specified position 'n' in the sequence. The function returns an integer value.",
    "HumanEval/64": "int: The total count of vowels (a, e, i, o, u) present in the input string.",
    "HumanEval/65": "List[int]: A new list of integers that represents the original array after being circularly shifted by the specified number of positions.",
    "HumanEval/66": "int: The sum of the digits of the input integer.",
    "HumanEval/67": "List[List[str]]: A list of lists, where each inner list contains the fruits assigned to one person. The distribution is as even as possible.",
    "HumanEval/68": "List: A list containing the values associated with the specified key from each dictionary in the input list. If a dictionary does not contain the specified key, it may return None or skip that dictionary, depending on the implementation.",
    "HumanEval/69": "List[str]: A list of strings from the input 'items' that contain the 'query' term. If 'case_sensitive' is False, the search will be case-insensitive.",
    "HumanEval/70": "List[int]: A new list of integers sorted according to the order specified in the 'order' parameter. If an element in 'lst' is not present in 'order', it should be placed at the end of the sorted list, maintaining their original relative order.",
    "HumanEval/71": "float: The area of the triangle, calculated using the formula (base * height) / 2.",
    "HumanEval/72": "bool: Returns True if the total weight of the cargo is less than or equal to the max_weight, indicating that it can fly. Otherwise, returns False.",
    "HumanEval/73": "List[int]: A list representing the count of each denomination used to make the smallest change, corresponding to the order of denominations provided.",
    "HumanEval/74": "int: The total number of matching elements between list1 and list2.",
    "HumanEval/75": "bool: Returns True if the input number is a multiply prime number, otherwise returns False.",
    "HumanEval/76": "bool: Returns True if the number can be expressed as a power of the base, otherwise False.",
    "HumanEval/77": "bool: Returns True if the input number is a perfect cube, otherwise returns False.",
    "HumanEval/78": "str: A string representing the hexadecimal version of the input key, truncated or padded to the specified length.",
    "HumanEval/79": "str: A string representing the binary equivalent of the input integer number.",
    "HumanEval/80": "bool: Returns True if the number is a happy number, otherwise returns False.",
    "HumanEval/81": "str: The letter grade corresponding to the numerical score. The letter grades are typically 'A', 'B', 'C', 'D', or 'F', based on the score ranges.",
    "HumanEval/82": "int: The function returns an integer representing the count of prime numbers found in the input list.",
    "HumanEval/83": "bool: The function returns a boolean value. It returns True if there is at least one integer in the list that starts and ends with the digit '1'. Otherwise, it returns False.",
    "HumanEval/84": "float: The result of evaluating the mathematical expression provided in the input string 's'. The function returns a floating-point number representing the solution to the expression.",
    "HumanEval/85": "int or float: The sum of the two input numbers.",
    "HumanEval/86": "str: The original string with characters rearranged to their initial order before shuffling.",
    "HumanEval/87": "Series: A Pandas Series object representing the row at the specified index in the DataFrame.",
    "HumanEval/88": "List[int]: A new list of integers sorted in the specified order (ascending by default, or descending if reverse is True).",
    "HumanEval/89": "str: The encrypted version of the input text, transformed according to the specified encryption algorithm and key.",
    "HumanEval/90": "int: The next smallest integer in the list that is less than the current integer. If no such number exists, the function may return a specific value (e.g., None or a sentinel value) to indicate this.",
    "HumanEval/91": "bool: Returns True if the activity level and interest level are both below the threshold, indicating boredom. Otherwise, returns False.",
    "HumanEval/92": "bool: Returns True if the integer meets certain conditions based on the threshold and options, otherwise returns False.",
    "HumanEval/93": "str: The encoded version of the input string, transformed according to the specified encoding type.",
    "HumanEval/94": "float: The truncated number. The function returns a floating-point number that has been truncated to a specified precision or format.\n\nint or float: The result of the algebraic operation. The function returns the result of applying the specified operator to the operand, which could be an integer or a floating-point number depending on the operation.\n\nstr: The solution or result of processing the input string. The function returns a string that represents the solution or outcome of solving the problem or equation provided in the input string.\n\nstr: The MD5 hash of the input text. The function returns a string that is the MD5 hash value of the given text, providing a unique identifier for the input.\n\nList[int]: A list of integers. The function returns a list containing a sequence of integers generated between the specified range defined by the parameters a and b.",
    "HumanEval/95": "bool: Returns True if all string elements in the dictionary (both keys and values) match the specified case type ('upper' or 'lower'). Returns False otherwise.",
    "HumanEval/96": "List[int]: A list of integers starting from 'start' up to 'end', incremented by 'step'. The list includes the 'end' value if it is reached exactly by the step increments.",
    "HumanEval/97": "int or float: The product of the two input numbers, which will be an integer if both inputs are integers, or a float if at least one input is a float.",
    "HumanEval/98": "int: The function returns an integer representing the count of uppercase letters found in the input string.",
    "HumanEval/99": "int: The integer value that is closest to the given floating-point number based on the specified rounding method.",
    "HumanEval/100": "List[str]: A list of strings representing the order of items in the pile, arranged according to the specified constraints.",
    "HumanEval/101": "str: A single string where the words from the input text are joined together using the specified separator.",
    "HumanEval/102": "int: The function returns an integer that is the closest number to the target from the list of numbers, within the specified tolerance. If no number meets the criteria, it returns None.",
    "HumanEval/103": "int: The rounded average of the input list of numbers.",
    "HumanEval/104": "List[int]: A list containing the unique digits found in the input number, in the order they appear.",
    "HumanEval/105": "List[str]: A list of strings sorted by their length, either in ascending or descending order based on the 'reverse' parameter.",
    "HumanEval/106": "float: The truncated number, which is the original number rounded to the specified number of decimal places. This return value is a floating-point number that represents the input number with reduced precision.",
    "HumanEval/107": "bool: Returns True if the number is a palindrome and is either even or odd, depending on the context of the function. Otherwise, returns False.",
    "HumanEval/108": "int: The count of integers in the list that satisfy the given condition.",
    "HumanEval/109": "bool: Returns True if the ball can be successfully moved from the start position to the end position without encountering any obstacles, otherwise returns False.",
    "HumanEval/110": "float: The amount of the to_currency received after the exchange.",
    "HumanEval/111": "List[int]: A list of integers representing the frequency of data points in each bin of the histogram.",
    "HumanEval/112": "tuple: A tuple containing two elements. The first element is a boolean indicating whether the string is a palindrome after the specified characters are removed. The second element is the modified string after the characters have been removed.",
    "HumanEval/113": "int: The count of odd numbers present in the input list.",
    "HumanEval/114": "int: The function returns an integer representing the minimum sum of any contiguous subarray of the specified length within the given array.",
    "HumanEval/115": "float: The function returns a floating-point number representing the maximum additional fill that can be added to the containers without exceeding their maximum capacity.",
    "HumanEval/116": "List[int]: A new list of integers sorted in the specified order (ascending by default, or descending if reverse is True).",
    "HumanEval/117": "List[str]: A list of words from the input string that meet the specified length criteria and are not in the exclude list.",
    "HumanEval/118": "str: The closest vowel to the specified character in the input string. If no vowels are found, it may return an empty string or a specific indicator.",
    "HumanEval/119": "List[Tuple[int, int]]: A list of tuples, where each tuple contains two integers representing the indices of matching opening and closing parentheses in the string.",
    "HumanEval/120": "float: The maximum value found in the list of numbers provided as input.",
    "HumanEval/121": "float: The truncated version of the input number. This is the result after applying the truncation logic to the input number, ensuring it meets the specified precision or format.",
    "HumanEval/122": "List[int]: A new list containing the element-wise sum of the input lists.",
    "HumanEval/123": "List[int]: A list of odd numbers encountered in the Collatz sequence starting from the given integer n.",
    "HumanEval/124": "bool: Returns True if the date_string matches the expected format and represents a valid date, otherwise returns False.",
    "HumanEval/125": "List[str]: A list of words obtained by splitting the input text using the specified separator.",
    "HumanEval/126": "bool: Returns True if the list is sorted in the specified order (ascending by default, or descending if reverse is True). Returns False otherwise.",
    "HumanEval/127": "List[int]: A list containing the elements that are present in both list1 and list2. The elements in the returned list are unique and the order is not guaranteed.",
    "HumanEval/128": "int: The function returns an integer that represents the sign of the product of the numbers in the list. The return value is 1 if the product is positive, -1 if the product is negative, and 0 if the product is zero.",
    "HumanEval/129": "int: The minimum sum of the path from the top-left to the bottom-right corner of the grid, moving only down or right.",
    "HumanEval/130": "bool: Returns True if the given sides can form a valid triangle, otherwise returns False.",
    "HumanEval/131": "float: The truncated number, rounded to the specified number of decimal places.",
    "HumanEval/132": "bool: Returns True if the parentheses in the expression are properly nested and balanced, otherwise returns False.",
    "HumanEval/133": "int: The sum of the squares of the integers in the input list.",
    "HumanEval/134": "bool: Returns True if the last character of the input string is a letter (a-z, A-Z), otherwise returns False.",
    "HumanEval/135": "bool: Returns True if the integers in the list can be rearranged such that the sum of every pair of consecutive integers is divisible by k. Otherwise, returns False.",
    "HumanEval/136": "Tuple[int, int]: A tuple containing two integers, where the first integer is the largest value and the second integer is the smallest value from the input list.",
    "HumanEval/137": "bool: Returns True if the two elements are considered equal based on the comparison logic implemented within the function, otherwise returns False.",
    "HumanEval/138": "bool: Returns True if there exists at least one pair of numbers in the list whose sum is even, otherwise returns False.",
    "HumanEval/139": "int: The result of the factorial calculation based on the specified mode. If 'standard', it returns the regular factorial of n. If 'special', it returns a modified factorial value as per the function's logic.",
    "HumanEval/140": "str: A new string with all irregular spaces removed, ensuring that there is only a single space between words and no leading or trailing spaces.",
    "HumanEval/141": "bool: Returns True if the file_name has an extension that is in the allowed_extensions list, otherwise returns False.",
    "HumanEval/142": "int: The sum of the squares of the integers provided in the input list.",
    "HumanEval/143": "List[str]: A list of words extracted from the input sentence, where each word is a string.",
    "HumanEval/144": "str: A simplified version of the input expression, with redundant elements removed and terms combined where possible.",
    "HumanEval/145": "List[dict]: A list of dictionaries sorted by the 'points' key. Each dictionary represents a player, maintaining the original structure with 'name' and 'points' keys.",
    "HumanEval/146": "List[int]: A list of integers that have been filtered from the input_list based on the specified threshold and mode. The returned list contains only those elements that meet the criteria defined by the mode in relation to the threshold.",
    "HumanEval/147": "List[Tuple[int, int, int]]: A list of tuples, where each tuple contains three integers from the input list whose sum is greater than or equal to the threshold.",
    "HumanEval/148": "float: The function returns a float that represents the input number truncated to the specified number of decimal places. This ensures that the returned value has a reduced precision as defined by the precision parameter.",
    "HumanEval/149": "int: The sum of all integers in the sorted_list that are less than or equal to the threshold.",
    "HumanEval/150": "int: Returns the greater of the two integers, x or y. If both are equal, it returns either of them.",
    "HumanEval/151": "int: The function returns an integer which is twice the absolute difference between the two input integers.",
    "HumanEval/152": "bool: The function returns a boolean value. It returns True if the two values 'a' and 'b' are considered equal based on the comparison logic implemented within the function, otherwise it returns False.",
    "HumanEval/153": "str: The function returns a string representing the strongest extension based on the given criteria. If no extension meets the criteria, it may return an empty string or a specific message indicating no match was found.",
    "HumanEval/154": "bool: Returns True if the pattern is found as a cyclic permutation within the text, otherwise returns False.",
    "HumanEval/155": "Tuple[int, int]: A tuple where the first element is the count of even numbers and the second element is the count of odd numbers in the input list.",
    "HumanEval/156": "str: A string representing the mini Roman numeral equivalent of the input integer. The mini Roman numeral format is a simplified version of the traditional Roman numeral system, possibly using fewer characters or a different notation style.",
    "HumanEval/157": "float: The area of the right-angle triangle calculated using the formula (base * height) / 2.",
    "HumanEval/158": "float: The maximum value found in the list of numbers.",
    "HumanEval/159": "int or float: The amount of food that was actually eaten, which is the lesser of 'need' and 'number'.",
    "HumanEval/160": "float: The result of the algebraic operation performed using the given operator and operand. If the operation is division and the operand is zero, it should handle the division by zero error appropriately.",
    "HumanEval/161": "str: The solution to the problem or equation provided in the input string. The return value is a string that represents the result or answer after processing the input.",
    "HumanEval/162": "str: The MD5 hash of the input string, represented as a hexadecimal string.",
    "HumanEval/163": "List[int]: A list of integers starting from 'a' and ending at 'b', inclusive."
}